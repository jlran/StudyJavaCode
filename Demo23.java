package com.github.jlran;
/**
 * 泛型(Generic)
 * @author jlran
 *
 */
public class Demo23 {
	public static void main(String[] args) {
		/*
		1. 函数上的泛型定义
	      当函数中使用了一个不明确的数据类型，那么在函数上就可以进行泛型的定义。
		  public <泛型的声明> 返回值类型  函数名( 泛型 变量名  ){
		  
		  }*/
	}
	
	public <T> void MyDate(T t){
		
	}
	/*
	 * 格式
		2. 类上的泛型声明
	      修饰符 class 类名<泛型>{
		  
	  }
	  */
}

//*****************
class Mydate<T>{
	
}

/*
 * 注意：静态方法不可以使用类中定义的泛型
	因为类中的泛型需要在对象初始化时指定具体的类型，而静态优先于对象存在。那么类中的静态方法就需要单独进行泛型声明，声明泛型一定要写在static后，返回值类型之前
	泛型类细节：
	1、创建对象的时候要指定泛型的具体类型
	2、创建对象时可以不指定泛型的具体类型(和创建集合对象一眼)。默认是Object，例如我们使用集合存储元素的时候没有使用泛型就是那么参数的类型就是Object
	3、类上面声明的泛型只能应用于非静态成员函数，如果静态函数需要使用泛型，那么
	需要在函数上独立声明。
	4、如果建立对象后指定了泛型的具体类型，那么该对象操作方法时，这些方法只能操作一种数据类型。
	5、所以既可以在类上的泛型声明，也可以在同时在该类的方法中声明泛型。*/
